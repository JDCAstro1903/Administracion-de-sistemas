# Definir la ruta base del FTP 
$FTP_Root = "C:\FTP"
$General_Folder = "$FTP_Root\General"
$Reprobados_Folder = "$FTP_Root\Reprobados"
$Recursadores_Folder = "$FTP_Root\Recursadores"
$Users_Folder = "$FTP_Root\Users"

# Crear estructura de carpetas al mismo nivel
New-Item -ItemType Directory -Path $FTP_Root -Force
New-Item -ItemType Directory -Path $General_Folder -Force
New-Item -ItemType Directory -Path $Reprobados_Folder -Force
New-Item -ItemType Directory -Path $Recursadores_Folder -Force
New-Item -ItemType Directory -Path $Users_Folder -Force

# Instalar el Servidor FTP si no está instalado
Install-WindowsFeature Web-FTP-Server -IncludeManagementTools

# Crear grupos de usuarios
$Reprobados_Group = "FTP_Reprobados"
$Recursadores_Group = "FTP_Recursadores"

New-LocalGroup -Name $Reprobados_Group -ErrorAction SilentlyContinue
New-LocalGroup -Name $Recursadores_Group -ErrorAction SilentlyContinue

# Configurar permisos iniciales
icacls $FTP_Root /grant "ANONYMOUS LOGON:(RX)" /grant "Everyone:(RX)"
icacls $General_Folder /grant "ANONYMOUS LOGON:(RX)" /grant "Everyone:(RX)"
icacls $Reprobados_Folder /grant "ANONYMOUS LOGON:(RX)" /grant "Everyone:(RX)"
icacls $Recursadores_Folder /grant "ANONYMOUS LOGON:(RX)" /grant "Everyone:(RX)"
icacls $Reprobados_Folder /grant "*${Reprobados_Group}:(M)"
icacls $Recursadores_Folder /grant "*${Recursadores_Group}:(M)"

# Preguntar cuántos usuarios agregar
$Num_Users = Read-Host "¿Cuántos usuarios deseas agregar?"

1..([int]$Num_Users) | ForEach-Object {
    $UserName = Read-Host "Ingresa el nombre del usuario $_"
    $PlainPassword = Read-Host "Ingresa la contraseña para $UserName"
    $SecurePassword = ConvertTo-SecureString $PlainPassword -AsPlainText -Force
    
    do {
        $UserGroup = Read-Host "¿Grupo del usuario? (1: Reprobados, 2: Recursadores)"
    } while ($UserGroup -ne "1" -and $UserGroup -ne "2")

    # Intentar crear el usuario con manejo de errores mejorado
    try {
        $userParams = @{
            Name = $UserName
            Password = $SecurePassword
            PasswordNeverExpires = $true
            Description = "Usuario FTP"
            ErrorAction = "Stop"
        }
        
        New-LocalUser @userParams
        Write-Host "Usuario $UserName creado exitosamente" -ForegroundColor Green
        
        # Establecer que el usuario no puede cambiar la contraseña usando net user
        net user $UserName /passwordchg:no
        Start-Sleep -Seconds 1
    }
    catch {
        Write-Host "Error al crear el usuario $UserName : $_" -ForegroundColor Red
        continue
    }
    
    # Crear carpeta personal del usuario
    $UserFolder = "$FTP_Root\Users\$UserName"
    New-Item -ItemType Directory -Path $UserFolder -Force
    
    # Asignar permisos al usuario
    icacls $UserFolder /grant "*${UserName}:(M)"
    icacls $General_Folder /grant "*${UserName}:(M)"

    # Asignar usuario al grupo correspondiente
    if ($UserGroup -eq "1") {
        Add-LocalGroupMember -Group $Reprobados_Group -Member $UserName -ErrorAction SilentlyContinue
        icacls $Reprobados_Folder /grant "*${UserName}:(M)"
    } elseif ($UserGroup -eq "2") {
        Add-LocalGroupMember -Group $Recursadores_Group -Member $UserName -ErrorAction SilentlyContinue
        icacls $Recursadores_Folder /grant "*${UserName}:(M)"
    } else {
        Write-Host "Grupo no válido. Usuario no asignado a grupo."
    }
}

# Configurar el servicio FTP
Import-Module WebAdministration
if (!(Get-WebConfiguration -filter "/system.ftpServer")) {
    Write-Host "El servidor FTP no está configurado correctamente en IIS. Verifique la instalación."
    exit
}

New-WebFtpSite -Name "FTP_Site" -PhysicalPath $FTP_Root -Port 21 -Force

# Configurar SSL
Set-WebConfigurationProperty -filter "/system.ftpServer/security/ssl" -name "controlChannelPolicy" -value "SslAllow"
Set-WebConfigurationProperty -filter "/system.ftpServer/security/ssl" -name "dataChannelPolicy" -value "SslAllow"

# Configurar autenticación
Set-WebConfigurationProperty -filter "/system.ftpServer/security/authentication/anonymousAuthentication" -name "enabled" -value "True"
Set-WebConfigurationProperty -filter "/system.ftpServer/security/authentication/basicAuthentication" -name "enabled" -value "True"

# Verificar si la regla de autorización ya existe antes de agregarla
$existingRule = Get-WebConfiguration "/system.ftpServer/security/authorization" | Where-Object { $_.users -eq "*" -and $_.permissions -eq "Read" }

if (-not $existingRule) {
    Add-WebConfiguration "/system.ftpServer/security/authorization" -value @{
        accessType="Allow";
        users="*";
        permissions="Read";
        roles="";
    }
} else {
    Write-Host "La regla de autorización ya existe. No se añadirá una duplicada."
}

# Reiniciar el servicio FTP
Restart-Service ftpsvc
Write-Host "Configuración del servidor FTP finalizada."
